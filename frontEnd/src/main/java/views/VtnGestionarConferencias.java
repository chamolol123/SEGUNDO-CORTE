package views;

import utilidades.Utilidades;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.JButton;
import models.Conferencia;
import services.ConferenciaServices;
import utilidades.Render;

public class VtnGestionarConferencias extends javax.swing.JInternalFrame {
    private final ConferenciaServices conferenceService;
    
    public VtnGestionarConferencias(ConferenciaServices conferenceService) {
        initComponents();
        this.conferenceService = conferenceService;
        this.jTableListadoConferencias.setDefaultRenderer(Object.class, new Render());
        iniciarlizarTabla();
    }

    private void iniciarlizarTabla()
    {
       DefaultTableModel model= new DefaultTableModel();    
       model.addColumn("Id");
       model.addColumn("Nombre");       
       model.addColumn("Fecha de inicio");
       model.addColumn("Fecha de fin");
       model.addColumn("Ubicacion");
       model.addColumn("Cantidad maxima de articulos");
       model.addColumn("Eliminar");
       model.addColumn("Actualizar");
       this.jTableListadoConferencias.setModel(model);
    }
    
    public void limpiarTabla(){
        
        DefaultTableModel modelo=(DefaultTableModel) this.jTableListadoConferencias.getModel();
        int filas=this.jTableListadoConferencias.getRowCount();
        for (int i = 0;filas>i; i++) {
            modelo.removeRow(0);
        }        
    }
    
    private void llenarTabla()
    {
        DefaultTableModel model=(DefaultTableModel) this.jTableListadoConferencias.getModel();
        limpiarTabla();
        ArrayList<Conferencia> listaConferencias = (ArrayList<Conferencia>) this.conferenceService.findAll();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        
        JButton JButtonEliminarConferencia = new JButton();
        JButtonEliminarConferencia.setName("Eliminar");
        JButtonEliminarConferencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/remove.png")));

        JButton JButtonActualizarConferencia = new JButton();
        JButtonActualizarConferencia.setName("Actualizar");
        JButtonActualizarConferencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/aplicar.png")));
       
        for (Conferencia conference : listaConferencias) {
            Object[] row = {
                    conference.getId(),
                    conference.getName(),
                    formatter.format(conference.getStartDate()),
                    formatter.format(conference.getEndDate()),
                    conference.getPlace(),
                    conferenceService.getCantMaxArticles(conference.getId())+"",
                    JButtonEliminarConferencia,
                    JButtonActualizarConferencia
            };
            model.addRow(row);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelSuperior = new javax.swing.JPanel();
        jLabelTitulo = new javax.swing.JLabel();
        jPanelInferior = new javax.swing.JPanel();
        jPanelCentral = new javax.swing.JPanel();
        jButtonRegistrar = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListadoConferencias = new javax.swing.JTable();

        jPanelSuperior.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 204)));

        jLabelTitulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelTitulo.setForeground(new java.awt.Color(102, 51, 255));
        jLabelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitulo.setText("Listado de conferencias");

        javax.swing.GroupLayout jPanelSuperiorLayout = new javax.swing.GroupLayout(jPanelSuperior);
        jPanelSuperior.setLayout(jPanelSuperiorLayout);
        jPanelSuperiorLayout.setHorizontalGroup(
            jPanelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 957, Short.MAX_VALUE)
        );
        jPanelSuperiorLayout.setVerticalGroup(
            jPanelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelSuperior, java.awt.BorderLayout.PAGE_START);

        jPanelInferior.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 204)));

        javax.swing.GroupLayout jPanelInferiorLayout = new javax.swing.GroupLayout(jPanelInferior);
        jPanelInferior.setLayout(jPanelInferiorLayout);
        jPanelInferiorLayout.setHorizontalGroup(
            jPanelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 957, Short.MAX_VALUE)
        );
        jPanelInferiorLayout.setVerticalGroup(
            jPanelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelInferior, java.awt.BorderLayout.PAGE_END);

        jPanelCentral.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 204)));

        jButtonRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/agregar.png"))); // NOI18N
        jButtonRegistrar.setText("Registrar conferencia");
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });

        jButtonActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/print.png"))); // NOI18N
        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jTableListadoConferencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableListadoConferencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListadoConferenciasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListadoConferencias);

        javax.swing.GroupLayout jPanelCentralLayout = new javax.swing.GroupLayout(jPanelCentral);
        jPanelCentral.setLayout(jPanelCentralLayout);
        jPanelCentralLayout.setHorizontalGroup(
            jPanelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCentralLayout.createSequentialGroup()
                .addGroup(jPanelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelCentralLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 842, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCentralLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jButtonActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 543, Short.MAX_VALUE)
                        .addComponent(jButtonRegistrar)))
                .addGap(47, 47, 47))
        );
        jPanelCentralLayout.setVerticalGroup(
            jPanelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCentralLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRegistrar)
                    .addComponent(jButtonActualizar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelCentral, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
       llenarTabla();
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        VtnRegistrarConferencia objVtnRegistrarConferencia = new VtnRegistrarConferencia(this.conferenceService);
        objVtnRegistrarConferencia.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        objVtnRegistrarConferencia.setVisible(true);
    }//GEN-LAST:event_jButtonRegistrarActionPerformed

    private void jTableListadoConferenciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListadoConferenciasMouseClicked
        int column = this.jTableListadoConferencias.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY()/jTableListadoConferencias.getRowHeight();
        
        if(row < jTableListadoConferencias.getRowCount() && row >= 0 && column < jTableListadoConferencias.getColumnCount() && column >= 0){
            Object value = jTableListadoConferencias.getValueAt(row, column);
            
            if(value instanceof JButton){
                
                ((JButton)value).doClick();
                JButton boton = (JButton) value;
                
                String idConferencia = jTableListadoConferencias.getValueAt(row, 0).toString();
                int idConferenciaConvertido = Integer.parseInt(idConferencia);
                if(boton.getName().equals("Eliminar")){
                    try{  
                        if(Utilidades.mensajeConfirmacion("¿ Estás seguro de que quieres eliminar el artículo con identificador " + idConferencia + " " 
                            +" ?", "Confirmación") == 0){
                           boolean bandera = this.conferenceService.delete(idConferenciaConvertido);
                           if(bandera==true)
                           {
                               Utilidades.mensajeExito("La conferencia con identificador " + idConferenciaConvertido + " fue eliminada exitosamente", "Conferencia eliminado");
                               llenarTabla();
                           }
                           else
                           {
                               Utilidades.mensajeAdvertencia("La conferencia con identificador " + idConferenciaConvertido + " no fue eliminada", "Error al eliminar");
                           }
                        }
                    }catch(Exception ex){
                        Utilidades.mensajeError("Error al eliminar usuario. Intentelo de nuevo más tarde", "Error");
                    }  
                }
                else if(boton.getName().equals("Actualizar")){
                    VtnActualizarConferencia objVtnActualizarConferencia = 
                            new VtnActualizarConferencia(conferenceService);
                    objVtnActualizarConferencia.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                    objVtnActualizarConferencia.cargarDatos(idConferenciaConvertido);
                    objVtnActualizarConferencia.setVisible(true);
                            
                }
            }
        }
    }//GEN-LAST:event_jTableListadoConferenciasMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JPanel jPanelCentral;
    private javax.swing.JPanel jPanelInferior;
    private javax.swing.JPanel jPanelSuperior;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableListadoConferencias;
    // End of variables declaration//GEN-END:variables
}
